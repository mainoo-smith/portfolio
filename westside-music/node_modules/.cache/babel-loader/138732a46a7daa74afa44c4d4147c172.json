{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maino\\\\Documents\\\\react\\\\westside-music\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from './../SearchBar/SearchBar';\nimport SearchResults from './../SearchResults/SearchResults';\nimport Playlist from './../Playlist/Playlist';\nimport Spotify from './../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'Last Show',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  } //add track\n\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(SavedTrack => SavedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } //remove track(s)\n\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks.filter(SavedTrack => SavedTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } //update playlist name\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } //save playlist\n\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, this.state.trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  } //search\n\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlist: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/maino/Documents/react/westside-music/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","SavedTrack","id","push","setState","filter","name","trackUris","map","uri","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from './../SearchBar/SearchBar';\nimport SearchResults from './../SearchResults/SearchResults';\nimport Playlist from './../Playlist/Playlist';\nimport Spotify from './../../util/Spotify';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults : [],\n\n      playlistName: 'Last Show',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  \n  }\n//add track\n  addTrack(track){\n    let tracks = this.state.playlistTracks;\n      if(tracks.find(SavedTrack =>\n        SavedTrack.id === track.id)) {\n        return;\n      }\n      tracks.push(track);\n      this.setState({playlistTracks : tracks});\n  }\n  //remove track(s)\n  removeTrack(track){\n    let tracks = this.state.playlistTracks.filter(SavedTrack => SavedTrack.id !== track.id);\n      this.setState({playlistTracks : tracks});\n  }\n  //update playlist name\n  updatePlaylistName(name){\n    this.setState({playlistName: name});\n  }\n  //save playlist\n  savePlaylist(){\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, this.state.trackUris).then(() =>{\n      this.setState({playlistName: 'New Playlist', playlistTracks: []})\n    })\n  }\n  //search\n  search(term){\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    });\n    \n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n        <SearchBar onSearch={this.search}/>\n        <div className=\"App-playlist\">\n         <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\n        <Playlist playlist={this.state.playlistName} \n                  playlistTracks={this.state.playlistTracks}\n                  onRemove={this.removeTrack}\n                  onNameChange={this.updatePlaylistName}\n                  onSave={this.savePlaylist}/>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}