{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maino\\\\Documents\\\\react\\\\westside-music\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from './../SearchBar/SearchBar';\nimport SearchResults from './../SearchResults/SearchResults';\nimport Playlist from './../Playlist/Playlist';\nimport Spotify from './../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: \"Test\",\n        artist: 'Test Artist',\n        album: 'Album one',\n        id: 1\n      }, {\n        name: \"Test1\",\n        artist: 'Test Artist1',\n        album: 'Album one',\n        id: 2\n      }, {\n        name: \"Test2\",\n        artist: 'Test Artist2',\n        album: 'Album one',\n        id: 3\n      }],\n      playlistName: 'Last Show',\n      playlistTracks: [{\n        name: \"Playlist name\",\n        artist: 'Playlist Test Artist',\n        album: 'Playlist Album one',\n        id: 4\n      }, {\n        name: \"Playlist 1 name\",\n        artist: 'Playlist 1 Test Artist',\n        album: 'Playlist 1 Album one',\n        id: 5\n      }, {\n        name: \"Playlist 2 name\",\n        artist: 'Playlist 2 Test Artist',\n        album: 'Playlist 2 Album one',\n        id: 6\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  } //add track\n\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(SavedTrack => SavedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } //remove track(s)\n\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks.filter(SavedTrack => SavedTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } //update playlist name\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } //save playlist\n\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n  } //search\n\n\n  search(term) {\n    console.log(term);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlist: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/maino/Documents/react/westside-music/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","SavedTrack","push","setState","filter","trackUris","map","uri","term","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from './../SearchBar/SearchBar';\nimport SearchResults from './../SearchResults/SearchResults';\nimport Playlist from './../Playlist/Playlist';\nimport Spotify from './../../util/Spotify';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults : [\n        {\n          name: \"Test\",\n          artist: 'Test Artist',\n          album: 'Album one',\n          id: 1\n      },\n      {\n          name: \"Test1\",\n          artist: 'Test Artist1',\n          album: 'Album one',\n          id: 2\n      },\n      {\n          name: \"Test2\",\n          artist: 'Test Artist2',\n          album: 'Album one',\n          id: 3\n      }\n      ],\n\n      playlistName: 'Last Show',\n      playlistTracks: [\n        {name: \"Playlist name\",\n      artist: 'Playlist Test Artist',\n      album: 'Playlist Album one',\n      id: 4},\n\n      {name: \"Playlist 1 name\",\n      artist: 'Playlist 1 Test Artist',\n      album: 'Playlist 1 Album one',\n      id: 5}, \n\n      {name: \"Playlist 2 name\",\n      artist: 'Playlist 2 Test Artist',\n      album: 'Playlist 2 Album one',\n      id: 6}\n    ]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  \n  }\n//add track\n  addTrack(track){\n    let tracks = this.state.playlistTracks;\n      if(tracks.find(SavedTrack =>\n        SavedTrack.id === track.id)) {\n        return;\n      }\n      tracks.push(track);\n      this.setState({playlistTracks : tracks});\n  }\n  //remove track(s)\n  removeTrack(track){\n    let tracks = this.state.playlistTracks.filter(SavedTrack => SavedTrack.id !== track.id);\n      this.setState({playlistTracks : tracks});\n  }\n  //update playlist name\n  updatePlaylistName(name){\n    this.setState({playlistName: name});\n  }\n  //save playlist\n  savePlaylist(){\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n  }\n  //search\n  search(term){\n    console.log(term);\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n        <SearchBar onSearch={this.search}/>\n        <div className=\"App-playlist\">\n         <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\n        <Playlist playlist={this.state.playlistName} \n                  playlistTracks={this.state.playlistTracks}\n                  onRemove={this.removeTrack}\n                  onNameChange={this.updatePlaylistName}\n                  onSave={this.savePlaylist}/>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}